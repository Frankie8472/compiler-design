======
ATeam
======
+ comments
- vtable on stack, rather have it on the heap?
- some helperfunctions are exit code. no comments on that?
+ saved callee saved registers before method call!

======
ehhhm
======
- comments
~ why differentiate between caller use and register uses?
+ nice helper funtions for errors
+ classcontext.java
o Your Casts and inheritance does not always work.
- You don't have to AtomicInteger. You are not in an Multithreading enviorment
- Try to avoid static imports. In most cases they are less readable and confuses the reader.

=======
EpicXi 
=======
+ Good Idea to use a debug function. Easier than using GDB all the time
+ Nice Register backup function in AstCodeGenerator
o why save all registers on stack all the time (e.g. binop)?
o Indentation is not consistent (Hint: IntelliJ has a auto code format feature; you can even customize it)
- It's not very clear how you handle the super classes and inhherintance with your classNumber
- ToDoException is not the right exception to indicate that the Main class was not found or any other failure. Prefer using RuntimeException.
- When you use Calloc you write 'malloc' in the comments. It's a difference.
- Too few comments and not very helpful